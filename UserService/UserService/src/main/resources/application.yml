server:
  port: 8081
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/microservice
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    dialect: org.hibernate.dialect.MySQL8Dialect
  application:
    name: USER-SERVICE
  config:
    import: configserver:http://localhost:8086
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-17225798.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oajy07x1umVsSyuv5d7
            client-secret: MhbsvASggim3tN-CwXixlNHw8ImwDBpWri9RZUCPvZtPKA5wrT-XISyai_-LgHcy
        provider:
          okta:
            issuer-uri: https://dev-17225798.okta.com/oauth2/default
#Circuit Breaker configurations
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always
resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
  retry:
    instances:
      ratingHotelService:
        max-attempts: 3
        wait-duration: 5s

  ratelimiter:
    intsances:
      userRateLimiter:
        limit-refresh-period: 4s
        limit-for-period: 2
        timeout-duration: 0s

okta:
  oauth2:
  issuer: https://dev-17225798.okta.com/oauth2/default
  audience: api://default